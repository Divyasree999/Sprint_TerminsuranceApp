package com.cg.terminsuranceuser.control;

import java.util.List;


//import javax.validation.Valid;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.cg.terminsuranceuser.entity.Customer;
import com.cg.terminsuranceuser.exception.ResourceNotFoundException;
import com.cg.terminsuranceuser.service.UserService;

@RestController
@RequestMapping("/api/v2")
public class CustomerController {
	@Autowired
	private UserService userService;

	@GetMapping("/getAllUsers")
	public List<Customer> getAllUsers() {
		return userService.getAllUsers();
	}

	@GetMapping("/finduser/{id}")
	public ResponseEntity<Customer> getUserById(@PathVariable(value = "id") Integer userId) throws ResourceNotFoundException {
		Customer user= userService.findUserById(userId);
		return  ResponseEntity.ok(user);
	}
	@PostMapping("/saveuser")
	public Customer createUser( @RequestBody Customer user ) {
		return userService.saveUser(user);
	}

	@PutMapping("/updateuser/{id}")
	public ResponseEntity<Customer> updateUserById(@PathVariable(value = "id") Integer userId,
			 @RequestBody Customer user) throws ResourceNotFoundException {
		Customer user1= userService.updateUser(userId, user);
		return  ResponseEntity.ok(user1);
	}
	
	 @DeleteMapping("/deleteuser/{id}")
	 public ResponseEntity<Boolean> deleteUser(@PathVariable(value = "id") Integer userId,@RequestBody Customer user) throws ResourceNotFoundException	{
			Boolean user1 = userService.deleteUserById(userId);
			return  ResponseEntity.ok(user1);
    }
}
