package com.cg.terminsuranceuser.service;

import java.util.List;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PathVariable;

import com.cg.terminsuranceuser.entity.User;
import com.cg.terminsuranceuser.exception.ResourceNotFoundException;
import com.cg.terminsuranceuser.repository.UserDaoImpl;
import com.cg.terminsuranceuser.service.UserService;
@Service
@Transactional
public class UserServiceImpl implements UserService{
	@Autowired
	private UserDaoImpl user;
	

	public List<User> getAllUsers(){
		return user.findAll();
	}

	public User findUserById(@PathVariable(value="id")Integer userId) throws ResourceNotFoundException {
	
		User u =user.findByUserId(userId);
		if(u==null)
		{
			new ResourceNotFoundException("User not found for this id :: " + userId);
		}
		return u;
	}

   /*public List<user> findByUserIdAndPolicyId(int userId,int policyId) {
        return (List<userPolicy>) user.findByUserIdAndPolicyId(userId, policyId);
    }*/
    public boolean deleteUserById(Integer userId) throws ResourceNotFoundException {
    	User u = user.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User Policy ot found for this id :: " + userId));
    	 user.delete(u);
    	 if(null == u){
	            return true;
	        }
	        return false;
    }
			

	public User saveUser(User u) {
		
		return user.save(u);
	}

	public User updateUser(Integer userId,User user) throws ResourceNotFoundException {
		User u1 = user.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User  not found for this id :: " + userId));
		u1.setUserId(user.getUserId());
		u1.setPolicyId(user.getPolicyId());
		u1.setUserName(user.getUserName());
		u1.setEmail(user.getEmail());
		u1.setMobileNo(user.getMobileNo());
		u1.setAge(user.getAge());
		u1.setDob(user.getDob());
		final User updatedUser =user.save(u1);
		return updatedUser;
	}
	

	public List<User> saveAll() {
		// TODO Auto-generated method stub
		return null;
	}
}
