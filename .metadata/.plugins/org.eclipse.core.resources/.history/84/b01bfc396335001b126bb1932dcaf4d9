package com.cg.terminsuranceuser.service;

import java.util.List;
import javax.transaction.Transactional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PathVariable;

import com.cg.terminsuranceuser.entity.User;
import com.cg.terminsuranceuser.exception.ResourceNotFoundException;
import com.cg.terminsuranceuser.repository.UserDaoImpl;

@Service
@Transactional
public class UserServiceImpl implements UserService{
	@Autowired
	private UserDaoImpl userpolicy;
	

	public List<User> getAllUserPolicies(){
		return userpolicy.findAll();
	}

	public User findUserById(@PathVariable(value="id")Integer userpolicyid) throws ResourceNotFoundException {
	
		User user =userpolicy.findByUserId(userpolicyid);
		if(user==null)
		{
			new ResourceNotFoundException("User Policy not found for this id :: " + userpolicyid);
		}
		return user;
	}

   /*public List<userPolicy> findByUserIdAndPolicyId(int userId,int policyNo) {
        return (List<userPolicy>) userpolicy.findByUserIdAndPolicyId(userId, policyNo);
    }*/
    public boolean deleteUserById(Integer userpolicyid) throws ResourceNotFoundException {
    	User user = userpolicy.findById(userpolicyid)
				.orElseThrow(() -> new ResourceNotFoundException("User Policy ot found for this id :: " + userpolicyid));
    	 userpolicy.delete(user);
    	 if(null == user){
	            return true;
	        }
	        return false;
    }
			

	public User saveUser(User user) {
		
		return user.save(user);
	}

	public User updateUser(Integer userId,User user) throws ResourceNotFoundException {
		User user1 = user.findById(userId)
				.orElseThrow(() -> new ResourceNotFoundException("User Policy not found for this id :: " + userId));
		user1.setUserId(user.getUserId());
		user1.setPolicyId(user.getPolicyId());
		user1.setUserName(user.getUserName());
		user1.setEmail(user.getEmail());
		user1.setMobileNo(user.getMobileNo());
		user1.setAge(user.getAge());
		user1.setDob(user.getDob());
		final User updateduserPolicy =userpolicy.save(user1);
		return updateduserPolicy;
	}
	

	public List<User> saveAll() {
		// TODO Auto-generated method stub
		return null;
	}
}
