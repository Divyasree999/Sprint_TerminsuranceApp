package com.cg.terminsurancepayment.service;

/** The IPaymentServiceImpl class provides access to repository methods to CRUD operations Cart details 
 * 
 * 
 * @author G5
 *
 */
import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.bind.annotation.PathVariable;

import com.cg.terminsurancepayment.entity.Payment;
import com.cg.terminsurancepayment.exception.PaymentIdNotFoundException;
import com.cg.terminsurancepayment.repository.PaymentDaoImpl;
import com.cg.terminsurancepayment.exception.DuplicatePaymentException;

@Service
public class PaymentServiceImpl {
	@Autowired
	private PaymentDaoImpl payment;
	public Payment savePayment(Payment u) {

		return payment.save(u);
	}
	public Payment updatePayment(Integer paymentId, Payment u) throws PaymentIdNotFoundException {
		Payment u1 = payment.findById(paymentId)
				.orElseThrow(() -> new PaymentIdNotFoundException("Payment  not found for this id :: " + paymentId));
		u1.setPaymentId(u.getPaymentId());
		u1.setPolicyId(u.getPolicyId());
		u1.setPaymentName(u.getPaymentName());
		u1.setEmail(u.getEmail());
		u1.setMobileNo(u.getMobileNo());
		u1.setAge(u.getAge());
		u1.setDob(u.getDob());
		final Payment updatedPayment = payment.save(u1);
		return updatedPayment;
	}
	public List<Payment> getAllPayments() {
		return payment.findAll();
	}
	public Payment findPaymentById(@PathVariable(value = "id") Integer paymentId) throws PaymentIdNotFoundException {

		Payment u = payment.findByPaymentId(paymentId);
		if (u == null) {
			new PaymentIdNotFoundException("Payment not found for this id :: " + paymentId);
		}
		return u;
	}
}
